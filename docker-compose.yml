version: '3'
services:
  frontend:
    image: lh_frontend
    build:
      context: ./frontend
      network: host
    restart: always
    volumes:
      - ./frontend/src:/app/src
    depends_on:
      - nginx
    # ports:
      # - "2222:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true

  nginx:
    image: lh_nginx
    build:
      context: ./nginx
      network: host
    restart: always
    volumes:
      - ./data:/var/www/data
      # - ./frontend:/var/www/front
    depends_on:
      - backend
      - pgadmin
    ports:
      - "3030:80"

  backend:
    image: lh_backend
    build:
      context: ./backend
      network: host
    restart: always
    environment:
      PYTHONUNBUFFERED: "True"
      PYTHONDONTWRITEBYTECODE: "1"
      TZ: "Europe/Moscow"
      SECRET: "${SECRET}"
    volumes:
      - ./backend/app:/app
      - ./backend/static:/static
      - ./data:/data
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: lh_postgres
    build:
      context: ./database/postgres
      network: host
    restart: always
    environment:
      TZ: "Europe/Moscow"
      POSTGRES_DB: "localhub"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "7549"
      PGDATA: "/var/lib/postgresql/data"
    volumes:
      - ./database/postgres/scripts:/docker-entrypoint-initdb.d
      - ./database/postgres/data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: lh_pgadmin
    build:
      context: ./database/pgadmin
      network: host
    restart: always
    environment:
      TZ: "Europe/Moscow"
      PGADMIN_DEFAULT_EMAIL: "root@root.com"
      PGADMIN_DEFAULT_PASSWORD: "root"
      PGADMIN_DISABLE_POSTFIX: 1
    volumes:
      - ./database/pgadmin/data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy